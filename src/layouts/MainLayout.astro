---
import Navigation from "../components/Navigation.astro";
import Footer from "../components/Footer.astro";
import "../styles/tailwind.css";
import "animate.css";
const { title } = Astro.props;
---

<html lang="da">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="stylesheet" href="tailwind.css" />
    <script src="https://cdn.jsdelivr.net/npm/heroicons@1.0.6/dist/outline/arrow-down.svg"></script>
    <!--DM sans font -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=DM+Sans:ital,opsz,wght@0,9..40,100..1000;1,9..40,100..1000&family=Shrikhand&display=swap"
      rel="stylesheet"
    />
    <!-- Gloock font -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=DM+Sans:ital,opsz,wght@0,9..40,100..1000;1,9..40,100..1000&family=Gloock&family=Shrikhand&display=swap"
      rel="stylesheet"
    />

    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{Astro.props.title}</title>
  </head>
  <body class="bg-beige-500">
    <header class="top-0 sticky z-[10000]">
      <Navigation />
    </header>

    <main class="">
      <slot />
    </main>
   
    <footer class="bg-green-500 ">
     <Footer />
    </footer>
    <div class="scroll-dot fixed right-6 top-6 w-6 h-6 bg-red-600 rounded-full z-50 origin-top"></div>

  </body>
</html>


<script is:inline>
  const mobileLogo = document.getElementById("logo");
  const desktopLogo = document.getElementById("logo-d");

  const greenSections = Array.from(document.querySelectorAll('.green-section'))
    .filter(section => !section.closest('footer'));

  const visibleSections = new Set();

  const updateLogo = () => {
    if (visibleSections.size > 0) {
      mobileLogo.src = "/img/logo-negative-m.svg";
      desktopLogo.src = "/img/logo-negative-d.svg";
    } else {
      mobileLogo.src = "/img/logo-default-m.svg";
      desktopLogo.src = "/img/logo-default-l.svg";
    }
  };

  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        visibleSections.add(entry.target);
      } else {
        visibleSections.delete(entry.target);
      }
    });

    updateLogo();
  }, {
    threshold: 0.1, // vi ser om mindst 10% af en sektion er synlig
  });

  greenSections.forEach(section => observer.observe(section));

</script>

<script>
  import { animate, scroll } from "motion";

// Gør kuglen bevægelig ved at animere dens translateY i forhold til scroll
scroll(
  animate(".scroll-dot", { transform: ["translateY(0px)", `translateY(90vh)`] }),
  {
    target: document.body,
    offset: ["start start", "end end"],
  }
);
</script>


